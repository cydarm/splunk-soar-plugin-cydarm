{
  "appid": "2205e95a-16ab-479d-9c10-363d05153dcb",
  "name": "Cydarm",
  "description": "Integration with Cydarm API",
  "type": "endpoint",
  "product_vendor": "Cydarm",
  "logo": "cydarm.svg",
  "logo_dark": "cydarm_dark.svg",
  "product_name": "Cydarm",
  "python_version": "3",
  "product_version_regex": ".*",
  "publisher": "Splunk Community",
  "contributors": [
    {
      "name": "Ben Liew"
    }
  ],
  "license": "Copyright (c) Splunk, 2023",
  "app_version": "1.2.1",
  "utctime_updated": "2023-05-22T04:55:46.914172Z",
  "package_name": "phantom_cydarm",
  "main_module": "cydarm_connector.py",
  "min_phantom_version": "6.0.0.114895",
  "app_wizard_version": "1.0.0",
  "custom_made": true,
  "configuration": {
    "cydarm_api_base_url": {
      "description": "Base URL of Cydarm API.  Example: https://xyz.cydarm.io/cydarm-api",
      "data_type": "string",
      "required": true,
      "value_list": [],
      "default": "",
      "order": 0,
      "name": "cydarm_api_base_url",
      "id": 0
    },
    "cydarm_username": {
      "description": "Cydarm username",
      "data_type": "string",
      "required": true,
      "value_list": [],
      "default": "",
      "order": 1,
      "name": "cydarm_username",
      "id": 1
    },
    "cydarm_password": {
      "description": "Cydarm password",
      "data_type": "password",
      "required": true,
      "order": 2,
      "name": "cydarm_password",
      "id": 2
    },
    "basic_auth_username": {
      "description": "Basic auth username",
      "data_type": "string",
      "required": false,
      "value_list": [],
      "default": "",
      "order": 3,
      "name": "basic_auth_username",
      "id": 3
    },
    "basic_auth_password": {
      "description": "Basic auth password",
      "data_type": "password",
      "required": false,
      "order": 4,
      "name": "basic_auth_password",
      "id": 4
    }
  },
  "actions": [
    {
      "action": "test connectivity",
      "identifier": "test_connectivity",
      "description": "Validate the Cydarm asset configuration by attempting to generate an Access Token",
      "type": "test",
      "read_only": true,
      "parameters": {},
      "output": [],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "get case",
      "identifier": "get_case",
      "description": "Get a Cydarm case by UUID",
      "type": "generic",
      "read_only": true,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "UUID of case to get",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.assignee",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.closed",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.created",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.deletable",
          "data_type": "boolean"
        },
        {
          "data_path": "action_result.data.*.description",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.editable",
          "data_type": "boolean"
        },
        {
          "data_path": "action_result.data.*.locator",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.manageable",
          "data_type": "boolean"
        },
        {
          "data_path": "action_result.data.*.members",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.metadata",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.minSlaName",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.minSlaSeconds",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.org",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.readable",
          "data_type": "boolean"
        },
        {
          "data_path": "action_result.data.*.severity",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.severityName",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.tags",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.totalActionsInAllPlaybooks",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.totalCompletedActionsInAllPlaybooks",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.updateAcls",
          "data_type": "boolean"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "quick search cases",
      "identifier": "get_case_quick_search",
      "description": "Query Cydarm cases with a keyword filter",
      "type": "generic",
      "read_only": true,
      "parameters": {
        "search_string": {
          "name": "search_string",
          "description": "Search string",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.rank",
          "data_type": "numeric"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "create action comment",
      "identifier": "create_action_instance_data",
      "description": "Create a plaintext comment on an action instance",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "action_instance_uuid": {
          "name": "action_instance_uuid",
          "description": "UUID of action instance.",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "data": {
          "name": "data",
          "description": "Comment to add to action instance.",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.action_instance_uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.caseuuid",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)",
      "verbose": "Assumes a mimeType='text/plain' and a significance='Comment'."
    },
    {
      "action": "create case comment",
      "identifier": "create_case_data_comment",
      "description": "Create a plaintext comment on a case",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "UUID of the case",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "data": {
          "name": "data",
          "description": "Comment text",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "create case file",
      "identifier": "create_case_data_file",
      "description": "Create a file data entry for a case",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "UUID of the case",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "file_data": {
          "name": "file_data",
          "description": "Raw content of the file (will be base64 encoded)",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "file_name": {
          "name": "file_name",
          "description": "Name of the file",
          "order": 2,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "mime_type": {
          "name": "mime_type",
          "description": "MIME type of the file (e.g. 'application/pdf', 'image/png')",
          "order": 3,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "file_last_mod": {
          "name": "file_last_mod",
          "description": "Last modification timestamp of the file",
          "order": 4,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "significance": {
          "name": "significance",
          "description": "Significance of the file (defaults to 'Comment')",
          "order": 5,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)",
      "verbose": "Uploads a file as case data with the specified MIME type and significance"
    },
    {
      "action": "create case",
      "identifier": "create_case",
      "description": "Create case",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "acl": {
          "name": "acl",
          "description": "The ACL of the data object",
          "order": 0,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "assignee": {
          "name": "assignee",
          "description": "The name of the current assignee",
          "order": 1,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "closed": {
          "name": "closed",
          "description": "The time at which the case was closed",
          "order": 2,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "created": {
          "name": "created",
          "description": "The time at which the case was created",
          "order": 3,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "deletable": {
          "name": "deletable",
          "description": "Whether the data is deletable in the current context",
          "order": 4,
          "data_type": "boolean",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "description": {
          "name": "description",
          "description": "Description",
          "order": 5,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "editable": {
          "name": "editable",
          "description": "Whether the data is editable in the current context",
          "order": 6,
          "data_type": "boolean",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "locator": {
          "name": "locator",
          "description": "The locator of the case",
          "order": 7,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "manageable": {
          "name": "manageable",
          "description": "Whether the data is manageable in the current context",
          "order": 8,
          "data_type": "boolean",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "members": {
          "name": "members",
          "description": "UUIDs of member cases (if this case is a group).\n                           Expected format: JSON Array.\n                           Example: [\"d9e526e8-59fc-44e3-8458-08da3269e0b0\", \"bd10075d-740c-4a7c-931c-c2a65843f3dc\"]\n                           ",
          "order": 9,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "metadata": {
          "name": "metadata",
          "description": "Metadata fields attached to the case.\n               Expected format: JSON Object. Example:\n               {\n                \"Email-From\" : { \"value\" : \"sender@email.com\"},\n                \"Email-To\" : { \"value\" : \"recipient@email.com\"}\n               }\n               ",
          "order": 10,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "minSlaName": {
          "name": "minSlaName",
          "description": "The minimum SLA name.",
          "order": 11,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "minSlaSeconds": {
          "name": "minSlaSeconds",
          "description": "The minimum SLA remaining time, in seconds.",
          "order": 12,
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "org": {
          "name": "org",
          "description": "The name of the organisation who the case is relevant to",
          "order": 13,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "readable": {
          "name": "readable",
          "description": "Whether the data is readable in the current context",
          "order": 14,
          "data_type": "boolean",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "severity": {
          "name": "severity",
          "description": "An integer 1 to 5.",
          "order": 15,
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "severityName": {
          "name": "severityName",
          "description": "The severity name for the case",
          "order": 16,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "status": {
          "name": "status",
          "description": "The current status of the case",
          "order": 17,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "tags": {
          "name": "tags",
          "description": "The tags attached to this case. Expected format: JSON Array.",
          "order": 18,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "totalActionsInAllPlaybooks": {
          "name": "totalActionsInAllPlaybooks",
          "description": "The total number of actions for all playbooks in a case",
          "order": 19,
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "totalCompletedActionsInAllPlaybooks": {
          "name": "totalCompletedActionsInAllPlaybooks",
          "description": "The number of actions that are completed for all playbooks in a case",
          "order": 20,
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "updateAcls": {
          "name": "updateAcls",
          "description": "Update all ACLS for the case including data items",
          "order": 21,
          "data_type": "boolean",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "uuid": {
          "name": "uuid",
          "description": "The UUID of the case",
          "order": 22,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "update case",
      "identifier": "update_case",
      "description": "Update a case",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "Case UUID",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "acl": {
          "name": "acl",
          "description": "The ACL of the data object",
          "order": 1,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "assignee": {
          "name": "assignee",
          "description": "The name of the current assignee",
          "order": 2,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "closed": {
          "name": "closed",
          "description": "The time at which the case was closed",
          "order": 3,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "created": {
          "name": "created",
          "description": "The time at which the case was created",
          "order": 4,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "deletable": {
          "name": "deletable",
          "description": "Whether the data is deletable in the current context",
          "order": 5,
          "data_type": "boolean",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "description": {
          "name": "description",
          "description": "Description",
          "order": 6,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "editable": {
          "name": "editable",
          "description": "Whether the data is editable in the current context",
          "order": 7,
          "data_type": "boolean",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "locator": {
          "name": "locator",
          "description": "The locator of the case",
          "order": 8,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "manageable": {
          "name": "manageable",
          "description": "Whether the data is manageable in the current context",
          "order": 9,
          "data_type": "boolean",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "members": {
          "name": "members",
          "description": "UUIDs of member cases (if this case is a group).\n                           Expected format: JSON Array.\n                           Example: [\"d9e526e8-59fc-44e3-8458-08da3269e0b0\", \"bd10075d-740c-4a7c-931c-c2a65843f3dc\"]\n                           ",
          "order": 10,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "metadata": {
          "name": "metadata",
          "description": "Metadata fields attached to the case.\n               Expected format: JSON Object. Example:\n               {\n                \"Email-From\" : { \"value\" : \"sender@email.com\"},\n                \"Email-To\" : { \"value\" : \"recipient@email.com\"}\n               }\n               ",
          "order": 11,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "minSlaName": {
          "name": "minSlaName",
          "description": "The minimum SLA name.",
          "order": 12,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "minSlaSeconds": {
          "name": "minSlaSeconds",
          "description": "The minimum SLA remaining time, in seconds.",
          "order": 13,
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "org": {
          "name": "org",
          "description": "The name of the organisation who the case is relevant to",
          "order": 14,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "readable": {
          "name": "readable",
          "description": "Whether the data is readable in the current context",
          "order": 15,
          "data_type": "boolean",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "severity": {
          "name": "severity",
          "description": "An integer 1 to 5.",
          "order": 16,
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "severityName": {
          "name": "severityName",
          "description": "The severity name for the case",
          "order": 17,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "status": {
          "name": "status",
          "description": "The current status of the case",
          "order": 18,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "tags": {
          "name": "tags",
          "description": "The tags attached to this case. Expected format: JSON Array.",
          "order": 19,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "totalActionsInAllPlaybooks": {
          "name": "totalActionsInAllPlaybooks",
          "description": "The total number of actions for all playbooks in a case",
          "order": 20,
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "totalCompletedActionsInAllPlaybooks": {
          "name": "totalCompletedActionsInAllPlaybooks",
          "description": "The number of actions that are completed for all playbooks in a case",
          "order": 21,
          "data_type": "numeric",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "updateAcls": {
          "name": "updateAcls",
          "description": "Update all ACLS for the case including data items",
          "order": 22,
          "data_type": "boolean",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "uuid": {
          "name": "uuid",
          "description": "The UUID of the case",
          "order": 23,
          "data_type": "string",
          "required": false,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)",
      "verbose": "Note: updating tags via this API endpoint doesn't seem to work (at time of testing). Please use actions 'add case tag' and 'delete case tag' instead."
    },
    {
      "action": "update case history",
      "identifier": "update_case_history",
      "description": "Update a case's history",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "Case UUID",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "modified": {
          "name": "modified",
          "description": "The time at which the case was modified. Expected format: ISO-8601.",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "status": {
          "name": "status",
          "description": "Case's status. Currently only supports value of 'Event'.",
          "order": 2,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)",
      "verbose": "Note: API only supports updating 'status' field to 'Event'."
    },
    {
      "action": "create case playbook",
      "identifier": "create_case_playbook",
      "description": "Add a playbook to a case",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "Case UUID",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "playbook_uuid": {
          "name": "playbook_uuid",
          "description": "Playbook UUID",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "get case playbook",
      "identifier": "get_case_playbook",
      "description": "Get a playbook instance associated with a case",
      "type": "generic",
      "read_only": true,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "Case UUID",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "case_playbook_uuid": {
          "name": "case_playbook_uuid",
          "description": "Case Playbook instance UUID",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.casePlaybookUuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.caseUuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.playbookName",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.playbookDescription",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.action_statuses.*.actionName",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.action_statuses.*.actionInstanceUuid",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)",
      "verbose": "Warning: Only a subset of output fields are mapped."
    },
    {
      "action": "get case playbooks",
      "identifier": "get_case_playbooks",
      "description": "Gets a list of playbooks for a case",
      "type": "generic",
      "read_only": true,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "Case UUID",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.casePlaybookUuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.caseUuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.playbookName",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.playbookDescription",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.action_statuses.*.actionName",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.action_statuses.*.actionInstanceUuid",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)",
      "verbose": "Warning: Only a subset of output fields are mapped."
    },
    {
      "action": "get playbook action",
      "identifier": "get_playbook_action",
      "description": "Get playbook action",
      "type": "generic",
      "read_only": true,
      "parameters": {
        "action_uuid": {
          "name": "action_uuid",
          "description": "UUID of the action",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.atc.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.atc.name",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.atc.description",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)",
      "verbose": "Note: only a subset of output fields are mapped."
    },
    {
      "action": "create playbook action",
      "identifier": "create_playbook_action",
      "description": "Create playbook action",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "name": {
          "name": "name",
          "description": "The name of the action",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "acl": {
          "name": "acl",
          "description": "The UUID of the ACL of the action",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "description": {
          "name": "description",
          "description": "Action description",
          "order": 2,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "create playbook",
      "identifier": "create_playbook",
      "description": "Create playbook",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "name": {
          "name": "name",
          "description": "The name of the playbook",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "acl": {
          "name": "acl",
          "description": "The UUID of the ACL of the playbook",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "description": {
          "name": "description",
          "description": "Playbook description",
          "order": 2,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "add playbook action",
      "identifier": "add_action_to_playbook",
      "description": "Add an existing action to a playbook",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "playbook_uuid": {
          "name": "playbook_uuid",
          "description": "UUID of playbook.",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "action_uuid": {
          "name": "action_uuid",
          "description": "UUID of action to add.",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "get acl",
      "identifier": "get_acl",
      "description": "Get an ACL by UUID",
      "type": "generic",
      "read_only": true,
      "parameters": {
        "acl_uuid": {
          "name": "acl_uuid",
          "description": "UUID of acl to get",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.description",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.aci.*.uuid",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "get user",
      "identifier": "get_user",
      "description": "Get a user by UUID",
      "type": "generic",
      "read_only": true,
      "parameters": {
        "user_uuid": {
          "name": "user_uuid",
          "description": "UUID of user to get",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.username",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.email",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "add case watcher",
      "identifier": "add_watcher_to_case",
      "description": "Add watcher to case",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "Case UUID",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "user_uuid": {
          "name": "user_uuid",
          "description": "UUID of user to add as watcher",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "add case member",
      "identifier": "add_member_to_case",
      "description": "Adds a case as a member of another case",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "Case UUID",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "member_case_uuid": {
          "name": "member_case_uuid",
          "description": "UUID of case to add as a member of the case group",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "add case tag",
      "identifier": "add_case_tag",
      "description": "Add tag to case",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "Case UUID",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "tag_value": {
          "name": "tag_value",
          "description": "Name of tag",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        },
        {
          "data_path": "action_result.data.*.uuid",
          "data_type": "string"
        },
        {
          "data_path": "action_result.data.*.acl",
          "data_type": "string"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    },
    {
      "action": "delete case tag",
      "identifier": "delete_case_tag",
      "description": "Delete tag from case",
      "type": "generic",
      "read_only": false,
      "parameters": {
        "case_uuid": {
          "name": "case_uuid",
          "description": "Case UUID",
          "order": 0,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        },
        "tag_value": {
          "name": "tag_value",
          "description": "Name of tag",
          "order": 1,
          "data_type": "string",
          "required": true,
          "primary": false,
          "contains": [],
          "value_list": [],
          "default": ""
        }
      },
      "output": [
        {
          "data_path": "action_result.status",
          "data_type": "string"
        },
        {
          "data_path": "action_result.message",
          "data_type": "string"
        },
        {
          "data_path": "summary.total_objects",
          "data_type": "numeric"
        },
        {
          "data_path": "summary.total_objects_successful",
          "data_type": "numeric"
        }
      ],
      "render": {
        "type": "table"
      },
      "versions": "EQ(*)"
    }
  ]
}
